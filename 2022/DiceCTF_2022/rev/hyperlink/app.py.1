import json
import sys

def test_chain(links, start, end):
    current = start
    for link in links:
        current = int(''.join(
            str(int(current & component != 0))
            for component in link
        ), 2)
        #print("RESULT############ " + str(current-end))
    return (current-end)
    #return end == current & end


def main():
    try:
        with open('hyperlink.json', 'r') as f:
            data = json.load(f)
    except IOError:
        print('Could not open hyperlink.json')
        return

    '''
    print('Welcome to the chain building game.')
    print('Enter a chain and see if it works:')

    chain = input()

    
    if any(c not in legal_chars for c in chain):
        print('Chain contains illegal characters!')
        return
    '''

    legal_chars = set("abcdefghijklmnopqrstuvwxyz{}_")

    flag = ["d", "i", "c", "e", "{"]

    for i in range(0,34):
        lowest_result = 0
        new_flag_letter = "a"

        for char in legal_chars:
            print("\nTesting: {}".format(char))
            new_flag_test = ''.join(flag) + char

            print("NEW FLAG: {}".format(new_flag_test))

            for c in new_flag_test:
                print(c) 

            links = [data['links'][c] for c in new_flag_test]
            result = test_chain(links, data['start'], data['target'])

            print("Lowest result is: \t{}\nResult: \t\t{}\n".format(lowest_result, result))

            if lowest_result == 0:
                lowest_result = result
            elif lowest_result > result:
                lowest_result = result
                new_flag_letter = char
         

        flag.append(new_flag_letter)
        print("Finished iterating. Flag is now: {}\n Lowest result: {}\n New Letter: {}".format(''.join(flag), lowest_result, new_flag_letter))
        if i==1:
            sys.exit()

    if result:
        print('Chain works! Congratulations.')
    else:
        print('Oh no! Chain does not reach the target.')


if __name__ == '__main__':
    main()